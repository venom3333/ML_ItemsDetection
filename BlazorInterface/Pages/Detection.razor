@page "/detection"
@using BlazorInterface.Data
@inject DetectionService DetectionService
<h3>Detection</h3>

<h3>Upload completed</h3>
<RadzenUpload Url="upload/single" Style="margin-bottom: 20px;"
              Progress="@((args) => OnProgress(args, "Image upload"))"
              Accept="image/*"
              Complete="@Completed" />

<div class="col-md-6">
    <h3>Events</h3>
    <RadzenCard style="overflow: auto;height:500px;">
        <RadzenProgressBar Value="@progress" Unit="@info" Visible="@(progress > 0)" Style="margin-bottom: 20px" />
        @foreach (var e in events.OrderByDescending(i => i.Key))
        {
            @e.Value
            <br />
        }
    </RadzenCard>
</div>

@code {
    RadzenUpload upload;

    int progress;
    string info;
    Dictionary<DateTime, string> events = new Dictionary<DateTime, string>();

    void OnProgress(UploadProgressArgs args, string name)
    {
        this.info = $"% '{name}' / {args.Loaded} of {args.Total} bytes.";
        this.progress = args.Progress;

        if (args.Progress == 100)
        {
            events.Clear();
            foreach (var file in args.Files)
            {
                events.Add(DateTime.Now, $"Uploaded: {file.Name} / {file.Size} bytes");
            }
        }
    }

    void Completed(UploadCompleteEventArgs args)
    {
        events.Add(DateTime.Now, $"Server response: {args.RawResponse}");
    }
}
